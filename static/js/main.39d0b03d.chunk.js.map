{"version":3,"sources":["static/images/player/pokemon.jpeg","static/images/player/user.png","static/images/player/bot.png","components/TemporaryDrawer.js","components/AppBar.js","actions/home-actions.js","components/pages/HomePageSection.js","components/pages/HomePage.js","components/pages/NoPageFound.js","actions/game-actions.js","reducers/gameReducer.js","actions/player-actions.js","components/pages/TrumpCard.js","components/pages/BounceTrumpCard.js","services/pokemonOperations.js","components/pokemon/PlayerPokemon.js","actions/pokemon-actions.js","components/pages/PlayerCard.js","components/pokemon/InitLayout.js","components/pokemon/InitPlayers.js","components/pokemon/PokemonHome.js","theme.js","App.js","serviceWorker.js","reducers/homeReducer.js","reducers/playerReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","TemporaryDrawer","classes","this","props","style_unset","all","sideList","react_default","a","createElement","className","list","List","react_router_dom","activeClassName","exact","to","style","ListItem","button","key","ListItemIcon","Home_default","ListItemText","primary","Search_default","Divider","Settings_default","Cloud_default","secondary","SwipeableDrawer","open","isDrawerOpen","onClose","toggleDrawer","onOpen","tabIndex","role","onClick","onKeyDown","Component","withStyles","width","fullList","AppBar","state","_this","setState","root","AppBar_AppBar","position","Toolbar","IconButton","menuButton","color","aria-label","Menu_default","Typography","variant","grow","Button","components_TemporaryDrawer","TEST","theme","flexGrow","marginLeft","marginRight","title","Object","defineProperty","breakpoints","up","display","images","url","ImageButton","styled","ButtonBase","_ref","_ref2","height","down","zIndex","& .MuiImageBackdrop-root","opacity","& .MuiImageMarked-root","& .MuiTypography-root","border","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","Image","_ref3","alignItems","justifyContent","palette","common","white","ImageBackdrop","_ref4","backgroundColor","black","transition","transitions","create","ImageMarked","_ref5","HomePageSection","react","Box","sx","flexWrap","minWidth","map","image","focusRipple","backgroundImage","concat","Typography_Typography","component","pt","pb","spacing","HomePage","HomePageSection_HomePageSection","mapDispatchToProps","setTest","test","dispatch","type","payload","connect","objectSpread","NoPageFound","Grid","container","direction","justify","minHeight","item","xs","maxWidth","Paper","marginTop","textAlign","gutterBottom","padding","INIT_GAME","CHANGE_GAME_STATUS","GameStatus","NOT_STARTED","PLAYING","DISPLAYING_RESULTS","PAUSED","initialState","deckSize","noOfBotPlayers","noOfPlayers","status","INIT_PLAYER","LOAD_TRUMP","PLAY_TRUMP","UPDATE_PLAYER","INIT_LOADING_TRUMP","initPlayer","player","playTrump","attribute","setTimeout","checkTrump","winningPlayer","_React$useState","React","_React$useState2","slicedToArray","selectedAttribute","setSelectedAttribute","useEffect","activeTrump","trump","listItems","List_List","columns","attributes","id","name","xm","ListItem_ListItem","disabled","playerTurn","pId","attributeNameClicked","attributeValueClicked","value","handleListItemClick","selected","ListItemText_ListItemText","Card_Card","bgcolor","cardBackground","CardHeader","avatar","Avatar","red","avatarHeader","subheader","CardMedia","alt","CardContent","cardContent","CardActions","disableSpacing","Zoom_default","pages_TrumpCard","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getBackgroundColor","grey","blue","brown","green","pink","purple","yellow","teal","loadPokemon","trumpLoadingPayload","trumpLoaded","cards","fetch","then","res","json","result","background","types","push","weight","stats","forEach","stat","indexOf","s","base_stat","species","lang","flavor_text_entries","filter","e","language","flavor_text","isHidden","delayInMs","gameStatus","error","console","log","game","length","shouldDisplay","Img","margin","maxHeight","Fragment","pages_BounceTrumpCard","Card","src","pokemonImg","playerInfo","Paper_Paper","Grid_Grid","sm","PlayerCard_Img","botImg","userImg","InitLayout","playerCards","playerMap","pokemon_PlayerPokemon","pages_PlayerCard","InitPlayers","Map","arr","i","getMasterPokemonIndex","rnd","Srand","shuffle","choices","header","subHeader","set","b","sample","initialized","pokemon_InitLayout","PokemonHome","initGame","Container","pokemon_InitPlayers","createTheme","main","typography","fontSize","h3","@media (min-width:600px)","App","ThemeProvider","CssBaseline","react_router","path","Boolean","window","location","hostname","match","p1","rootReducer","combineReducers","home","arguments","undefined","action","get","trumpInitiator","winningPlayerId","winningPlayerAttributeValue","att","shift","allEnhancers","compose","applyMiddleware","reduxPromise","thunk","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39d0b03d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon.ba166cef.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/user.d48a8973.png\";","module.exports = __webpack_public_path__ + \"static/media/bot.4ee42d57.png\";","import React, { Component } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Settings from \"@material-ui/icons/Settings\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n};\n\nclass TemporaryDrawer extends Component {\n  render() {\n    const { classes } = this.props;\n    const style_unset = { all: \"unset\" };\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <NavLink\n            className={\"unactivePage\"}\n            activeClassName=\"activePage\"\n            exact\n            to=\"/\"\n            style={style_unset}\n          >\n            <ListItem button key={\"Home\"}>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Home\"} />\n            </ListItem>\n          </NavLink>\n\n          <NavLink\n            className={\"unactivePage\"}\n            activeClassName=\"activePage\"\n            exact\n            to=\"/pokemon\"\n            style={style_unset}\n          >\n            <ListItem button key={\"PokemonHome\"}>\n              <ListItemIcon>\n                <SearchIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Pokemon\"} />\n            </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <NavLink\n            className={\"unactivePage\"}\n            activeClassName=\"activePage\"\n            exact\n            to=\"/settings\"\n            style={style_unset}\n          >\n            <ListItem button key={\"Settings\"}>\n              <ListItemIcon>\n                <Settings />\n              </ListItemIcon>\n              <ListItemText primary={\"Settings\"} />\n            </ListItem>\n          </NavLink>\n\n          <ListItem button key={\"Version\"}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Version\"} secondary={\"v0.1\"} />\n          </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      <div>\n        <SwipeableDrawer\n          open={this.props.isDrawerOpen}\n          onClose={this.props.toggleDrawer(false)}\n          onOpen={this.props.toggleDrawer(true)}\n        >\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.props.toggleDrawer(false)}\n            onKeyDown={this.props.toggleDrawer(false)}\n          >\n            {sideList}\n          </div>\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(TemporaryDrawer);\n","import React, { Component } from \"react\";\nimport AppBarMUI from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Button from \"@material-ui/core/Button\";\n//import AccountCircle from '@material-ui/icons/AccountCircle';\n//import Badge from '@material-ui/core/Badge';\n//import NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport { Link } from \"react-router-dom\";\n\nimport TemporaryDrawer from \"./TemporaryDrawer\";\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n});\n\nclass AppBar extends Component {\n  state = {\n    isDrawerOpen: false,\n  };\n\n  toggleDrawer = (open) => () => {\n    this.setState({\n      isDrawerOpen: open,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBarMUI position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n              onClick={this.toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <Link to={\"/\"} style={{ all: \"unset\" }}>\n                {\"Top Trumps\"}\n              </Link>\n            </Typography>\n\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBarMUI>\n        <TemporaryDrawer\n          isDrawerOpen={this.state.isDrawerOpen}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AppBar);\n","// Action Types\nexport const TEST = \"TEST\";\n\n/* Home Page's Actions */\n\n// Test Setter\nexport function setTest(test) {\n    return dispatch => {\n        dispatch({\n            type: TEST,\n            payload: test\n        })\n    };\n}","import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport ButtonBase from \"@mui/material/ButtonBase\";\nimport Typography from \"@mui/material/Typography\";\n\nconst images = [\n  {\n    url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/2880px-International_Pok%C3%A9mon_logo.svg.png\",\n    title: \"Pokemon\",\n    width: \"33%\"\n  },\n  {\n    url:\n      \"https://thumbs.dreamstime.com/z/modern-professional-logo-cricket-sport-emblem-vector-illustration-111766034.jpg\",\n    title: \"Cricket\",\n    width: \"33%\"\n  },\n  {\n    url:\n      \"https://akm-img-a-in.tosshub.com/businesstoday/images/story/202209/markets-sixteen_nine.jpg?size=948:533\",\n    title: \"Sensex\",\n    width: \"33%\"\n  }\n];\n\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\n  position: \"relative\",\n  height: 200,\n  [theme.breakpoints.down(\"sm\")]: {\n    width: \"100% !important\", // Overrides inline-style\n    height: 100\n  },\n  \"&:hover, &.Mui-focusVisible\": {\n    zIndex: 1,\n    \"& .MuiImageBackdrop-root\": {\n      opacity: 0.15\n    },\n    \"& .MuiImageMarked-root\": {\n      opacity: 0\n    },\n    \"& .MuiTypography-root\": {\n      border: \"4px solid currentColor\"\n    }\n  }\n}));\n\nconst ImageSrc = styled(\"span\")({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center 40%\"\n});\n\nconst Image = styled(\"span\")(({ theme }) => ({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.palette.common.white\n}));\n\nconst ImageBackdrop = styled(\"span\")(({ theme }) => ({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  backgroundColor: theme.palette.common.black,\n  opacity: 0.4,\n  transition: theme.transitions.create(\"opacity\")\n}));\n\nconst ImageMarked = styled(\"span\")(({ theme }) => ({\n  height: 3,\n  width: 18,\n  backgroundColor: theme.palette.common.white,\n  position: \"absolute\",\n  bottom: -2,\n  left: \"calc(50% - 9px)\",\n  transition: theme.transitions.create(\"opacity\")\n}));\n\nexport const HomePageSection = () => {\n  return (\n    <Box\n      sx={{ display: \"flex\", flexWrap: \"wrap\", minWidth: 300, width: \"100%\" }}\n    >\n      {images.map((image) => (\n        <ImageButton\n          focusRipple\n          key={image.title}\n          style={{\n            width: image.width\n          }}\n        >\n          <ImageSrc style={{ backgroundImage: `url(${image.url})` }} />\n          <ImageBackdrop className=\"MuiImageBackdrop-root\" />\n          <Image>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              sx={{\n                position: \"relative\",\n                p: 4,\n                pt: 2,\n                pb: (theme) => `calc(${theme.spacing(1)} + 6px)`\n              }}\n            >\n              {image.title}\n              <ImageMarked className=\"MuiImageMarked-root\" />\n            </Typography>\n          </Image>\n        </ImageButton>\n      ))}\n    </Box>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\n// Action Imports\nimport { setTest } from \"../../actions/home-actions\";\nimport { HomePageSection } from \"./HomePageSection\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n        <HomePageSection />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return { ...state, ...props };\n};\n\nconst mapDispatchToProps = {\n  setTest,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\n// Material UI Imports\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst NoPageFound = () => { // Stateless Component\n        return (\n            <div>\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '90vh' }}\n                >\n                    <Grid item xs={6} style={{maxWidth:'90vw'}}>\n                        <Paper style={{marginTop:\"10px\",textAlign:\"center\"}}>\n                            <Typography variant=\"h4\" gutterBottom style={{padding:\"10px\"}}>\n                                {\"No Page Found!\"}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n};\n\nexport default NoPageFound;","export const INIT_GAME = \"INIT_GAME\";\nexport const CHANGE_GAME_STATUS = \"CHANGE_GAME_STATUS\"\n\nexport function initGame(game) {\n    return dispatch => {\n        dispatch({\n            type: INIT_GAME,\n            payload: game\n        })\n    };\n}\n\nexport function changeGameStatus(gameStatus){\n    return dispatch => {\n        dispatch({\n            type: CHANGE_GAME_STATUS,\n            payload: gameStatus\n        })\n    };\n}","import {CHANGE_GAME_STATUS, INIT_GAME} from \"../actions/game-actions\";\n\nexport const GameStatus = {\n    NOT_STARTED: \"NOT_STARTED\",\n    PLAYING: \"PLAYING\",\n    DISPLAYING_RESULTS: \"DISPLAYING_RESULTS\",\n    PAUSED: \"PAUSED\"\n\n}\n\nconst initialState = {\n    deckSize: 30,\n    noOfBotPlayers: 1,\n    noOfPlayers: 1,\n    status: GameStatus.NOT_STARTED\n\n};\n\nexport default function gameReducer(state = initialState, action) {\n    switch (action.type) {\n        case INIT_GAME:\n        case CHANGE_GAME_STATUS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return {...state};\n    }\n};\n","import {GameStatus} from \"../reducers/gameReducer\";\nimport {CHANGE_GAME_STATUS} from \"./game-actions\";\n\nexport const INIT_PLAYER = \"INIT_PLAYER\";\nexport const LOAD_TRUMP = \"LOAD_TRUMP\";\nexport const PLAY_TRUMP = \"PLAY_TRUMP\";\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\"\n\nexport const INIT_LOADING_TRUMP = \"INIT_LOADING_TRUMP\";\n\nexport function initPlayer(player) {\n    return dispatch => {\n        dispatch({\n            type: INIT_PLAYER,\n            payload: player\n        })\n    };\n}\n\nexport function playTrump(attribute) {\n    return dispatch => {\n        dispatch({\n            type: PLAY_TRUMP,\n            payload: attribute\n        })\n        dispatch({\n            type: CHANGE_GAME_STATUS,\n            payload: {status: GameStatus.DISPLAYING_RESULTS}\n        })\n\n        setTimeout(() => {\n            dispatch({\n                type: CHANGE_GAME_STATUS,\n                payload: {status: GameStatus.PLAYING}\n            })\n            dispatch({\n                type: UPDATE_PLAYER,\n                payload: {checkTrump: {winningPlayer: \"\"}}\n            })\n        }, 4000)\n\n    };\n}","import * as React from \"react\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport {red} from \"@mui/material/colors\";\n\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport {playTrump} from \"../../actions/player-actions\";\nimport {connect} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {TextField} from \"@mui/material\";\n\nconst TrumpCard = (props)  => {\n\n    const [selectedAttribute, setSelectedAttribute] = React.useState(\"\");\n\n    useEffect(()=>{\n        setSelectedAttribute(\"\");\n    }, [props.p.activeTrump])\n\n        const handleListItemClick = (attribute) => {\n            if (props.p.id === props.player.playerTurn && selectedAttribute === \"\") {\n                props.playTrump({\n                    pId: props.p.id,\n                    attributeNameClicked: attribute.name,\n                    attributeValueClicked: attribute.value\n                })\n                setSelectedAttribute(attribute.name);\n            }\n        };\n\n        const trump = props.p.activeTrump;\n        const listItems =\n            <List aria-label=\"stats-buttons\">\n                <Grid container columns={12}>\n                    {\n                        trump.attributes.map(attribute => (\n\n                            <Grid key={props.p.id + attribute.name} item xs={12} xm={6}>\n\n                                <ListItem\n                                    disabled={props.p.id === props.player.playerTurn && selectedAttribute !== \"\"}\n                                    button={props.p.id === props.player.playerTurn && selectedAttribute === \"\"}\n                                    onClick={() => handleListItemClick(attribute)}\n                                    selected={selectedAttribute === attribute.name}>\n                                    <Grid container xs={12}>\n                                        <Grid item xs={8}>\n                                            <ListItemText primary={attribute.name}/>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <ListItemText primary={attribute.value}/>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                            </Grid>\n\n\n                        ))\n                    }\n                </Grid>\n            </List>\n\n        return (\n            <>\n                {props.p &&\n                    <Card sx={{bgcolor: trump.cardBackground}}>\n                        <CardHeader\n                            avatar={\n                                <Avatar sx={{bgcolor: red[500]}} aria-label=\"avatar\">\n                                    {trump.avatarHeader}\n                                </Avatar>\n                            }\n                            title={<Typography variant=\"h6\">{trump.title}</Typography>}\n                            subheader={trump.subheader}\n                        />\n                        <CardMedia\n                            component=\"img\"\n                            image={trump.image}\n                            alt={trump.name}\n                        />\n\n                        <CardContent>\n                            <Typography variant=\"body\" color=\"text.secondary\">\n                                {trump.cardContent}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            {listItems}\n                        </CardActions>\n                    </Card>\n                }\n            </>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    playTrump\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrumpCard);\n","import * as React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport TrumpCard from \"./TrumpCard\";\nimport Zoom from 'react-reveal/Zoom';\n\nconst BounceTrumpCard = (props) => {\n\n    return (\n\n        <Zoom>\n            <TrumpCard p={props.p}/>\n        </Zoom>\n    )\n};\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BounceTrumpCard);","import {blue, brown, green, grey, pink, purple, red, teal, yellow} from \"@mui/material/colors\";\n\nexport const getMasterPokemonIndex = () =>{\n    var arr = [];\n    for (let i = 1; i < 650; i++) {\n        arr.push(i);\n    }\n\n    return arr;\n}\n\nexport const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport const getBackgroundColor = (color) => {\n    if (color === 'red') {\n        return red[300];\n    }\n    if (color === 'black' || color === 'gray') {\n        return grey[300];\n    }\n    if (color === 'blue') {\n        return blue[300];\n    }\n    if (color === 'brown') {\n        return brown[300];\n    }\n    if (color === 'green') {\n        return green[300];\n    }\n    if (color === 'pink') {\n        return pink[300];\n    }\n    if (color === 'purple') {\n        return purple[300];\n    }\n    if (color === 'yellow') {\n        return yellow[300];\n    }\n\n    return teal[300];\n}","import React, {useEffect} from \"react\";\n\nimport {connect} from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport pokemonImg from \"../../static/images/player/pokemon.jpeg\";\nimport {styled} from \"@mui/material/styles\";\nimport BounceTrumpCard from \"../pages/BounceTrumpCard\";\nimport {loadPokemon} from \"../../actions/pokemon-actions\";\nimport {GameStatus} from \"../../reducers/gameReducer\";\n\nconst PlayerPokemon = (props) => {\n\n    useEffect(() => {\n        props.loadPokemon({player: props.p, gameStatus: props.game.status});\n\n    }, [props.p.cards.length])\n\n    const Img = styled('img')({\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    });\n\n    let shouldDisplay;\n    if(props.game.status === GameStatus.DISPLAYING_RESULTS){\n        shouldDisplay = true;\n    }else{\n        shouldDisplay = props.player.playerTurn === props.p.id;\n    }\n\n    return (\n        <>\n            {shouldDisplay && <BounceTrumpCard p={props.p}/>}\n            {!shouldDisplay && <Card> <Img alt=\"pokemon\" src={pokemonImg}/> </Card>}\n\n        </>\n    );\n\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    loadPokemon,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerPokemon);\n","import {teal} from \"@mui/material/colors\";\nimport {capitalizeFirstLetter, getBackgroundColor} from \"../services/pokemonOperations\";\nimport {INIT_LOADING_TRUMP, LOAD_TRUMP} from \"./player-actions\";\nimport {GameStatus} from \"../reducers/gameReducer\";\nexport function loadPokemon(payload){\n    return dispatch => {\n\n        let trumpLoadingPayload = {id: payload.player.id, trumpLoaded: false}\n        dispatch({\n            type: INIT_LOADING_TRUMP,\n            payload: trumpLoadingPayload\n        })\n\n        let url = \"https://pokeapi.co/api/v2/pokemon/\" + payload.player.cards[0];\n        fetch(url)\n            .then((res) => res.json())\n            .then(\n                (result) => {\n\n                    let activeTrump = {};\n\n                    activeTrump.attributes = [];\n                    activeTrump.isHidden = true;\n                    activeTrump.background = teal[300];\n                    activeTrump.avatarHeader = result.name.toUpperCase()[0];\n                    activeTrump.title = capitalizeFirstLetter(result.name)\n                    activeTrump.subheader = capitalizeFirstLetter(result.types[0].type.name);\n                    //activeTrump.image = result.sprites.other.home.front_default;\n                    activeTrump.image = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\" + payload.player.cards[0] + \".png\"\n                    activeTrump.cardContent = \"\"\n\n                    activeTrump.attributes.push({name: \"Height\", value: result.height});\n                    activeTrump.attributes.push({name: \"Weight\", value: result.weight});\n\n\n                    result.stats.forEach(function (stat) {\n\n                        if (stat.stat.name.indexOf(\"special\") === -1) {\n                            let s = {};\n                            s.name = capitalizeFirstLetter(stat.stat.name);\n                            s.value = stat.base_stat;\n                            activeTrump.attributes.push(s);\n                        }\n                    }, result.attributes);\n\n\n                    fetch(result.species.url)\n                        .then((res) => res.json())\n                        .then(\n                            (res) => {\n                                let lang = res.flavor_text_entries.filter((e) => {\n                                    return e.language.name === \"en\";\n                                });\n                                activeTrump.cardContent = lang[0].flavor_text;\n                                activeTrump.cardBackground = getBackgroundColor(res.color.name);\n\n                                activeTrump.isHidden = false;\n\n                                let delayInMs = 5000;\n                                if(payload.gameStatus === GameStatus.PLAYING){\n                                    delayInMs = 1;\n                                }\n                                setTimeout(() => {\n                                    dispatch({\n                                        type: LOAD_TRUMP,\n                                        payload: {p: payload.player.id, activeTrump: activeTrump}\n                                    })\n                                }, delayInMs)\n\n\n                            },\n                            (error) => {\n                                console.log(\"Error fetching pokemon extra details\");\n                            }\n                        );\n\n                },\n                (error) => {\n                    console.log(\"Error fetching pokemon details\", error);\n                }\n            );\n\n    };\n}","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport {green, red, teal} from \"@mui/material/colors\";\nimport userImg from '../../static/images/player/user.png'\nimport botImg from '../../static/images/player/bot.png'\n\nimport {styled} from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\n\nimport ButtonBase from '@mui/material/ButtonBase';\nimport {connect} from \"react-redux\";\nimport {initPlayer} from \"../../actions/player-actions\";\nimport {useEffect} from \"react\";\n\nconst Img = styled('img')({\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n});\n\nconst PlayerCard = (props) => {\n\n    useEffect(() => {\n    }, [])\n    let bgcolor = teal[300];\n    if (!props.player.checkTrump.winningPlayer == \"\") {\n        if (props.p.id === props.player.checkTrump.winningPlayer) {\n            bgcolor = green[300];\n        } else {\n            bgcolor = red[300];\n        }\n    }\n\n    const playerInfo = props.p;\n    return (\n        <Paper sx={{bgcolor: bgcolor}}>\n            <Grid container spacing={2}>\n\n                <Grid item xs={12} sm container>\n\n                    <Grid item xs={6}>\n                        <ButtonBase>\n                            {playerInfo.id === \"b1\" && <Img alt=\"user\" src={botImg}/>}\n                            {playerInfo.id !== \"b1\" && <Img alt=\"user\" src={userImg}/>}\n                        </ButtonBase>\n                    </Grid>\n\n                    <Grid item xs={2}></Grid>\n                    <Grid item xs={4}>\n                        <Grid item xs container direction=\"column\" spacing={2}>\n                            <Grid item xs>\n                                <Typography variant=\"subtitle1\" component=\"div\">\n                                    Cards\n                                </Typography>\n                                <Typography variant=\"subtitle1\" component=\"div\">\n                                    {playerInfo.cards && playerInfo.cards.length}\n                                </Typography>\n                                <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                                    {playerInfo.name}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                    ID: {playerInfo.id}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    initPlayer,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerCard);\n","import React, {Component} from \"react\";\n\nimport PlayerPokemon from \"./PlayerPokemon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport PlayerCard from \"../pages/PlayerCard\";\nimport {initPlayer} from \"../../actions/player-actions\";\n\nclass InitLayout extends Component {\n\n\n    render() {\n\n        let playerCards = [];\n        let playerCardMap = this.props.player.playerMap;\n\n        playerCardMap.forEach((p, pId) => playerCards.push(\n            <Grid key={pId + \"cards\"} xm={6} xs={6}>\n                <Grid  container xm={7} xs={11} direction=\"column\">\n                    <PlayerPokemon p={p}/>\n                    <PlayerCard p={p}/>\n                </Grid>\n            </Grid>\n        ));\n\n        return (\n            <Grid container>\n                {playerCards}\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    initPlayer\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitLayout);\n\n","import React, {Component} from \"react\";\nimport Srand from \"seeded-rand\";\nimport InitLayout from \"./InitLayout\";\nimport {initPlayer} from \"../../actions/player-actions\";\nimport {connect} from \"react-redux\";\nimport {teal} from \"@mui/material/colors\";\nimport {getMasterPokemonIndex} from \"../../services/pokemonOperations\";\n\nclass InitPlayers extends Component {\n\n    componentDidMount()  {\n        let playerMap = new Map();\n        let arr = getMasterPokemonIndex();\n        const rnd = new Srand();\n        arr = rnd.shuffle(arr);\n\n        for (let i = 1; i <= this.props.game.noOfPlayers; i++) {\n            let cards = rnd.choices(arr, this.props.game.deckSize);\n            let p = {\n                id: \"p\" + i,\n                name: \"Player\" + 1,\n                cards: cards,\n                activeTrump: {\n                    attributes: [{name: \"\", value: \"\"}],\n                    isHidden: false,\n                    background: teal[300],\n                    avatarHeader: \"\",\n                    header: \"\",\n                    subHeader: \"\",\n                    image: \"\",\n                    cardContent: \"\"\n                }\n            }\n\n            playerMap.set(\"p\" + i, p);\n        }\n\n        for (let i = 1; i <= this.props.game.noOfBotPlayers; i++) {\n            let cards = rnd.sample(arr, this.props.game.deckSize);\n            let b = {\n                id: \"b\" + i,\n                name: \"Bot\" + i,\n                cards: cards,\n                activeTrump: {\n                    attributes: [{name: \"\", value: \"\"}],\n                    isHidden: true,\n                    background: teal[300],\n                    avatarHeader: \"\",\n                    header: \"\",\n                    subHeader: \"\",\n                    image: \"\",\n                    cardContent: \"\"\n                }\n            }\n\n            playerMap.set(\"b\" + i, b);\n\n        }\n        let player = {\n            noOfPlayers: this.props.game.noOfPlayers + this.props.game.noOfBotPlayers,\n            initialized: true,\n            playerTurn: \"p1\",\n            checkTrump: {\n                winningPlayer: \"\",\n            },\n            playerMap: playerMap\n        }\n\n        this.props.initPlayer(player);\n\n    }\n\n\n    render() {\n        return (\n            <>\n                {this.props.player.initialized && <InitLayout/>}\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    initPlayer,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InitPlayers);\n\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport InitPlayers from \"./InitPlayers\";\nimport {initGame} from \"../../actions/game-actions\";\nimport Container from '@mui/material/Container';\nimport {GameStatus} from \"../../reducers/gameReducer\";\n\nclass PokemonHome extends Component {\n\n\n    componentDidMount() {\n        this.props.initGame({\n            deckSize: 20,\n            noOfBotPlayers: 1,\n            noOfPlayers: 1,\n            status: GameStatus.PLAYING\n\n        })\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.game.status !== GameStatus.NOT_STARTED  && <InitPlayers/>}\n            </Container>\n        );\n    };\n}\n\nconst mapStateToProps = (state, props) => {\n    return {...state, ...props};\n};\n\nconst mapDispatchToProps = {\n    initGame\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonHome);","import {createTheme} from '@mui/material/styles';\nimport {green, purple} from '@mui/material/colors';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: purple[500],\n        },\n        secondary: {\n            main: green[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n        h3: {\n            fontSize: '2.8rem',\n            '@media (min-width:600px)': {\n                fontSize: '2.8rem',\n            },\n        }\n    },\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Material UI Imports\nimport { MuiThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\n// Component Imports\nimport AppBar from \"./components/AppBar\";\n\n// Page Imports\nimport HomePage from \"./components/pages/HomePage\";\nimport NoPageFound from \"./components/pages/NoPageFound\";\n\nimport PokemonHome from \"./components/pokemon/PokemonHome\";\nimport {theme} from \"./theme\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Switch>\n            \n            <Route exact path={\"/\"}  component={HomePage} />\n            <Route exact path={\"/pokemon\"} component={PokemonHome} />\n            <Route exact /*strict*/ component={NoPageFound} />\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return { ...state, ...props };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Action Type Imports\nimport {TEST} from \"../actions/home-actions\";\n\nconst initialState = {\n    test:0 // Test data\n};\n// Home Page's Reducer\nexport default function homeReducer(state=initialState, action) {\n    switch (action.type) {\n        case TEST:\n            return {\n                ...state,\n                test:action.payload\n            };\n\n        default:\n            return {...state};\n    }\n};\n\n\n\n","import {\n    INIT_LOADING_TRUMP,\n    INIT_PLAYER,\n    LOAD_TRUMP,\n    PLAY_TRUMP, UPDATE_PLAYER\n} from \"../actions/player-actions\";\nimport {teal} from \"@mui/material/colors\";\n\nconst initialState = {\n    noOfPlayers: 1,\n    initialized: false,\n    playerTurn: \"p1\",\n    checkTrump: {\n        winningPlayer: \"\",\n    },\n    playerMap: {\n        p1: {\n            id: \"dummy\",\n            name: \"dummy name\",\n            cards: [],\n            trumpLoaded: false,\n            activeTrump: {\n                attributes: [{name: \"\", value: \"\"}],\n                isHidden: false,\n                background: teal[300],\n                avatarHeader: \"\",\n                header: \"\",\n                subHeader: \"\",\n                image: \"\",\n                cardContent: \"\"\n            }\n        }\n    }\n\n};\n\nexport default function playerReducer(state = initialState, action) {\n    switch (action.type) {\n        case UPDATE_PLAYER:\n            return {\n                ...state,\n                ...action.payload\n            };\n        case INIT_PLAYER:\n            return action.payload;\n        case LOAD_TRUMP: {\n            let s = {...state};\n            s.playerMap.get(action.payload.p).activeTrump = action.payload.activeTrump;\n            s.playerMap.get(action.payload.p).trumpLoaded = true;\n            return s;\n        }\n        case INIT_LOADING_TRUMP: {\n            let s = {...state};\n            s.playerMap.get(action.payload.id).trumpLoaded = action.payload.trumpLoaded;\n            return s;\n        }\n\n        case PLAY_TRUMP: {\n\n            let s = {...state};\n            let trumpInitiator = action.payload.pId;\n            let attributeNameClicked = action.payload.attributeNameClicked;\n            let attributeValueClicked = action.payload.attributeValueClicked;\n\n            let winningPlayerId = trumpInitiator;\n            let winningPlayerAttributeValue = attributeValueClicked;\n            s.playerMap.forEach((p, pId) => {\n                let att = p.activeTrump.attributes.filter((e) => {\n                    return e.name === attributeNameClicked\n                })[0];\n                if (att.value > winningPlayerAttributeValue) {\n                    winningPlayerId = pId;\n                    winningPlayerAttributeValue = att.value;\n                }\n            })\n\n            s.checkTrump = {\n                winningPlayer: winningPlayerId,\n            }\n\n            //Take cards from losing players\n            s.playerMap.forEach((p, pId) => {\n                s.playerMap.get(winningPlayerId).cards.push(p.cards.shift())\n            })\n\n\n            return s;\n        }\n        default:\n            return state;\n    }\n};\n","import {combineReducers} from \"redux\";\n\nimport homeReducer from \"./homeReducer\";\nimport gameReducer from \"./gameReducer\";\nimport playerReducer from \"./playerReducer\";\n\nexport const rootReducer = combineReducers({\n    home:homeReducer,\n    game:gameReducer,\n    player:playerReducer\n});","import {applyMiddleware, compose, createStore} from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport {rootReducer} from \"./reducers/rootReducer\";\n\nimport reduxPromise from 'redux-promise-middleware';\n\nconst allEnhancers = compose(\n    applyMiddleware(reduxPromise,thunk)/*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n);\n\nexport const store = createStore(\n    rootReducer,\n    allEnhancers\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from \"react-redux\";\n\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}